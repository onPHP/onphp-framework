<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2012-10-28 12:28:55                    *
 *   This file will never be generated again - feel free to edit.            *
 *****************************************************************************/

namespace Onphp\NsConverter\EntitieProto;

use \Onphp\EntityProto;
use \Onphp\Primitive;

class ConverterEntity extends EntityProto
{
	/**
	 * @return ConverterEntity
	 */
	public static function me()
	{
		return self::getInstance(__CLASS__);
	}

	public function getFormMapping()
	{
		return array(
			'conf' => Primitive::string('conf')->required(),
			'pathes' => Primitive::formsList('pathes')->ofProto(PathEntity::me())->required(),
		);
	}

	public function checkConstraints($object, \Onphp\Form $form, $previousObject = null)
	{
		parent::checkConstraints($object, $form, $previousObject);
		if ($form->getErrors()) {
			return $this;
		}

		$this->checkPath($form);
	}

	private function checkPath(\Onphp\Form $form)
	{
		$path = $form->getValue('conf');
		if (!file_exists($path)) {
			$parentDir = dirname($path);
			if (!is_readable($parentDir)) {
				$form->markWrong('conf', $parentDir.' not readable');
			} elseif (!is_writable($parentDir)) {
				$form->markWrong('conf', $parentDir.' not writeable');
			}
		} elseif (!is_readable($path)) {
			$form->markWrong('conf', $path.' not readable');
		} elseif (!is_writable($path)) {
			$form->markWrong('conf', $path.' not writable');
		} elseif (!is_file($path) && !is_dir($path)) {
			$form->markWrong('conf', $path.' not dir and not file');
		}
	}
}