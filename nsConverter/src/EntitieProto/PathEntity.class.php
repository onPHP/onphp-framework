<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2012-10-28 12:28:55                    *
 *   This file will never be generated again - feel free to edit.            *
 *****************************************************************************/

namespace Onphp\NsConverter\EntitieProto;

use \Onphp\EntityProto;
use \Onphp\Primitive;
use Onphp\PrimitiveArray;

class PathEntity extends EntityProto
{
	/**
	 * @return PathEntity
	 */
	public static function me()
	{
		return self::getInstance(__CLASS__);
	}

	public function getFormMapping()
	{
		return array(
			'action' => Primitive::enum('action')->of('\Onphp\NsConverter\Business\ActionEnum')->setScalar(true)->required(),
			'path' => Primitive::string('path')->required(),
			'psr0' => Primitive::boolean('psr0'),
			'namespace' => Primitive::string('namespace'),
			'ext' => Primitive::string('ext')->setDefault('.php'),
			'noAlias' => Primitive::boolean('noAlias'),
		);
	}

	public function checkConstraints($object, \Onphp\Form $form, $previousObject = null)
	{
		parent::checkConstraints($object, $form, $previousObject);
		if ($form->getErrors()) {
			return $this;
		}

		$this->checkPath($form);
	}

	private function checkPath(\Onphp\Form $form)
	{
		$path = $form->getValue('path');
		if (!file_exists($path)) {
			$form->markWrong('path', $path.' not exists');
		} elseif (!is_readable($path)) {
			$form->markWrong('path', $path.' not readable');
		} elseif (!is_file($path) && !is_dir($path)) {
			$form->markWrong('path', $path.' not dir and not file');
		}
	}
}